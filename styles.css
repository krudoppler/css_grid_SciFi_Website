html,
body {
  margin: 0;
  padding: 0;
  font-family: "Manrope", sans-serif;
}

body {
  margin: 1em;
}

/* =================
    Layout
   ================= */

main {
  /* 
Challenge:
    1. Set up the "main" element as a grid container. 
    2. Specify a template of one column with 1fr width.
    3. Place 1em of space between each grid item. 
*/

  display: grid;
  grid-template-columns: 1fr;
  gap: 1em;
}

/* =================
    Article Card 
   ================= */

a:hover,
a:focus {
  filter: brightness(0.9);
}

a:focus {
  outline: 3px solid #5a5a5a;
  box-shadow: 0 0 0 3px rgba(135, 18, 113, 0.5);
  transition: outline 0.2s ease, box-shadow 0.2s ease;
}

article {
  border-radius: 0.2em;
  background-color: #e5e5e5;
  height: 100%;
}

.article-header {
  box-sizing: border-box;
  padding: 1em;
  width: 100%;
}

/* =================
    Typography 
   ================= */

h1 {
  color: #0f0f0f;
  letter-spacing: 0.04em;
  font-family: "Source Code Pro", sans-serif;
  margin: 0;
  padding: 0;
}

a {
  text-decoration: none;
}

h2 {
  font-size: 0.88rem;
  color: #5d0e50;
  margin: 0;
  letter-spacing: 0.065em;
  text-transform: uppercase;
}

h3 {
  font-size: 1rem;
  margin: 0.4em 0;
  letter-spacing: 0.03em;
  color: #111111;
  font-weight: 500;
}

p {
  margin: 0;
  font-size: 0.85rem;
  color: #7c7c7c;
}

/* =================
    Images 
   ================= */

img {
  width: 100%;
  border-top-left-radius: 0.2em;
  border-top-right-radius: 0.2em;
}

@media (min-width: 500px) {
  /*
    Challenge:
        1. Make our layout look like the screenshot. 
        (üìù Try to write the least CSS possible.)  
    */
  main {
    display: grid;
    grid-template: 1fr 1fr 1fr 1fr / 1fr 1fr;
  }
  .technology {
    grid-column: span 2;
  }
  .environment {
    grid-column: span 1;
  }
  .nasa {
    grid-row: span 2;
  }
  .physics {
    grid-column: span 1;
  }
  .health {
    grid-column: span 2;
  }
}

@media (min-width: 870px) {
  /*
    Challenge:
        1. Create a 12 column layout. 
           (Don‚Äôt write 1fr 12 times üò°)
        2. Place the items using grid lines.
           (üìù Try to write as little CSS as possible.)  
    */
  main {
    display: grid;
    grid-template: repeat(6, 1fr) / repeat(12, 1fr);
  }

  .technology {
    grid-column: 1 / 7;
    grid-row: 1 / 3;
  }

  .environment {
    grid-column: 7 / 10;
    grid-row: 1 / 3;
  }

  .nasa {
    grid-column: 10 / -1;
    grid-row: 1 / 6;
  }

  .physics {
    grid-column: 1 / 4;
    grid-row: 3 / 6;
  }

  .health {
    grid-column: 4 / 10 ;
    grid-row: 3 / 6;
  }
}
